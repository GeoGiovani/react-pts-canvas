{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\nimport {CanvasSpace} from 'pts/dist/es5';\n\n\nexport class PtsCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvRef = React.createRef();\n    this.space = null;\n    this.form = null;\n    this._touch = false;\n  }\n\n  componentDidMount() {\n    this.init();\n    this._update();\n  }\n\n  componentDidUpdate() {\n    this._update();\n  }\n\n  _update() {\n    if (this.props.play) {\n      this.space.play();\n    } else {\n      this.space.playOnce(0);\n    }\n\n    if (this._touch !== this.props.touch) {\n      this._touch = this.props.touch;\n      this.space.bindMouse( this._touch ).bindTouch( this._touch );\n    }\n  }\n\n\n  // Required: Override this to use Pts' player `animate` callback\n  // See guide: https://ptsjs.org/guide/space-0500\n  animate( time, ftime) {\n    this.form.point( this.space.pointer, 20, \"circle\" );\n  }\n\n  \n  // Optional: Override this to use Pts' player `start` callback\n  start( bound, space ) {}\n\n\n  // Optional: Override this to use Pts' player `resize` callback\n  resize( size, evt ) {}\n\n\n  // Optional: Override this to use Pts' player `action` callback\n  action ( type, px, py, evt ) {}\n\n\n  init() {\n    this.space = new CanvasSpace( this.canvRef ).setup({\n      bgcolor: this.props.background, \n      resize: this.props.resize, \n      retina: this.props.retina\n    });\n\n    this.form = this.space.getForm();\n    this.space.add( this );\n  }\n\n  render() {\n    return (\n      <div className={ this.props.name || \"\" } style={ this.props.style }>\n        <canvas className={ this.props.name ? this.props.name+\"-canvas\" : \"\" } ref={ c => (this.canvRef=c) } style={ this.props.canvasStyle }></canvas>\n      </div>\n    );\n  }\n}\n\n\nPtsCanvas.defaultProps = {\n  name: \"pts-react\", // maps to className of the container div\n  background: \"#9ab\",\n  resize: true,\n  retina: true,\n  play: true,\n  touch: true,\n  style: {},\n  canvasStyle: {}\n}\n\n\nexport class QuickStartCanvas extends PtsCanvas {\n  \n  animate( time, ftime) {\n    if (this.props.onAnimate) this.props.onAnimate( this.space, this.form, time, ftime );\n  }\n\n  start( bound, space ) {\n    if (this.props.onStart) this.props.onStart( bound, space )\n  }\n\n  resize( size, evt ) {\n    if (this.props.onResize) this.props.onResize( this.space, this.form, size, evt );\n  }\n\n  action ( type, px, py, evt ) {\n    if (this.props.onAction) this.props.onAction( this.space, this.form, type, px, py, evt );\n  }\n\n}\n\n\nQuickStartCanvas.defaultProps = {\n  name: \"pts-react\", // maps to className of the container div\n  background: \"#9ab\",\n  resize: true,\n  retina: true,\n  play: true,\n  touch: true,\n  style: {},\n  canvasStyle: {},\n  onStart: undefined,\n  onAnimate: undefined,\n  onResize: undefined,\n  onAction: undefined\n}"],"names":["PtsCanvas","props","canvRef","React","createRef","space","form","_touch","init","_update","play","playOnce","touch","bindMouse","bindTouch","time","ftime","point","pointer","bound","size","evt","type","px","py","CanvasSpace","setup","background","resize","retina","getForm","add","name","style","c","canvasStyle","Component","defaultProps","QuickStartCanvas","onAnimate","onStart","onResize","onAction","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,SAAb;;;qBACcC,KAAZ,EAAmB;;;qHACXA,KADW;;UAEZC,OAAL,GAAeC,MAAMC,SAAN,EAAf;UACKC,KAAL,GAAa,IAAb;UACKC,IAAL,GAAY,IAAZ;UACKC,MAAL,GAAc,KAAd;;;;;;wCAGkB;WACbC,IAAL;WACKC,OAAL;;;;yCAGmB;WACdA,OAAL;;;;8BAGQ;UACJ,KAAKR,KAAL,CAAWS,IAAf,EAAqB;aACdL,KAAL,CAAWK,IAAX;OADF,MAEO;aACAL,KAAL,CAAWM,QAAX,CAAoB,CAApB;;;UAGE,KAAKJ,MAAL,KAAgB,KAAKN,KAAL,CAAWW,KAA/B,EAAsC;aAC/BL,MAAL,GAAc,KAAKN,KAAL,CAAWW,KAAzB;aACKP,KAAL,CAAWQ,SAAX,CAAsB,KAAKN,MAA3B,EAAoCO,SAApC,CAA+C,KAAKP,MAApD;;;;;;;;;4BAOKQ,IAlCX,EAkCiBC,KAlCjB,EAkCwB;WACfV,IAAL,CAAUW,KAAV,CAAiB,KAAKZ,KAAL,CAAWa,OAA5B,EAAqC,EAArC,EAAyC,QAAzC;;;;;;;0BAKKC,KAxCT,EAwCgBd,KAxChB,EAwCwB;;;;;;2BAIde,IA5CV,EA4CgBC,GA5ChB,EA4CsB;;;;;;2BAIXC,IAhDX,EAgDiBC,EAhDjB,EAgDqBC,EAhDrB,EAgDyBH,GAhDzB,EAgD+B;;;2BAGtB;WACAhB,KAAL,GAAa,IAAIoB,WAAJ,CAAiB,KAAKvB,OAAtB,EAAgCwB,KAAhC,CAAsC;iBACxC,KAAKzB,KAAL,CAAW0B,UAD6B;gBAEzC,KAAK1B,KAAL,CAAW2B,MAF8B;gBAGzC,KAAK3B,KAAL,CAAW4B;OAHR,CAAb;;WAMKvB,IAAL,GAAY,KAAKD,KAAL,CAAWyB,OAAX,EAAZ;WACKzB,KAAL,CAAW0B,GAAX,CAAgB,IAAhB;;;;6BAGO;;;aAEL;;UAAK,WAAY,KAAK9B,KAAL,CAAW+B,IAAX,IAAmB,EAApC,EAAyC,OAAQ,KAAK/B,KAAL,CAAWgC,KAA5D;wCACU,WAAY,KAAKhC,KAAL,CAAW+B,IAAX,GAAkB,KAAK/B,KAAL,CAAW+B,IAAX,GAAgB,SAAlC,GAA8C,EAAlE,EAAuE,KAAM;mBAAM,OAAK9B,OAAL,GAAagC,CAAnB;WAA7E,EAAqG,OAAQ,KAAKjC,KAAL,CAAWkC,WAAxH;OAFJ;;;;EA/D2BhC,MAAMiC,SAArC;;AAwEApC,UAAUqC,YAAV,GAAyB;QACjB,WADiB;cAEX,MAFW;UAGf,IAHe;UAIf,IAJe;QAKjB,IALiB;SAMhB,IANgB;SAOhB,EAPgB;eAQV;CARf;;AAYA,IAAaC,gBAAb;;;;;;;;;;4BAEWvB,IAFX,EAEiBC,KAFjB,EAEwB;UAChB,KAAKf,KAAL,CAAWsC,SAAf,EAA0B,KAAKtC,KAAL,CAAWsC,SAAX,CAAsB,KAAKlC,KAA3B,EAAkC,KAAKC,IAAvC,EAA6CS,IAA7C,EAAmDC,KAAnD;;;;0BAGrBG,KANT,EAMgBd,KANhB,EAMwB;UAChB,KAAKJ,KAAL,CAAWuC,OAAf,EAAwB,KAAKvC,KAAL,CAAWuC,OAAX,CAAoBrB,KAApB,EAA2Bd,KAA3B;;;;2BAGlBe,IAVV,EAUgBC,GAVhB,EAUsB;UACd,KAAKpB,KAAL,CAAWwC,QAAf,EAAyB,KAAKxC,KAAL,CAAWwC,QAAX,CAAqB,KAAKpC,KAA1B,EAAiC,KAAKC,IAAtC,EAA4Cc,IAA5C,EAAkDC,GAAlD;;;;2BAGlBC,IAdX,EAciBC,EAdjB,EAcqBC,EAdrB,EAcyBH,GAdzB,EAc+B;UACvB,KAAKpB,KAAL,CAAWyC,QAAf,EAAyB,KAAKzC,KAAL,CAAWyC,QAAX,CAAqB,KAAKrC,KAA1B,EAAiC,KAAKC,IAAtC,EAA4CgB,IAA5C,EAAkDC,EAAlD,EAAsDC,EAAtD,EAA0DH,GAA1D;;;;EAfSrB,SAAtC;;AAqBAsC,iBAAiBD,YAAjB,GAAgC;QACxB,WADwB;cAElB,MAFkB;UAGtB,IAHsB;UAItB,IAJsB;QAKxB,IALwB;SAMvB,IANuB;SAOvB,EAPuB;eAQjB,EARiB;WASrBM,SATqB;aAUnBA,SAVmB;YAWpBA,SAXoB;YAYpBA;CAZZ;;;;"}