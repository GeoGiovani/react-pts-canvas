{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\nimport {CanvasSpace} from 'pts/dist/es5';\n\n\nexport default class PtsCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvRef = React.createRef();\n    this.space = null;\n    this.form = null;\n    this._touch = false;\n  }\n\n  componentDidMount() {\n    this.init();\n    this._update();\n  }\n\n  componentDidUpdate() {\n    this._update();\n  }\n\n  _update() {\n    if (this.props.play) {\n      this.space.play();\n    } else {\n      this.space.playOnce(0);\n    }\n\n    if (this._touch !== this.props.touch) {\n      this._touch = this.props.touch;\n      this.space.bindMouse( this._touch ).bindTouch( this._touch );\n    }\n  }\n\n\n  // Required: Override this to use Pts' player `animate` callback\n  // See guide: https://ptsjs.org/guide/space-0500\n  animate( time, ftime) {\n    this.form.point( this.space.pointer, 20, \"circle\" );\n  }\n\n  \n  // Optional: Override this to use Pts' player `start` callback\n  start( bound, space ) {}\n\n\n  // Optional: Override this to use Pts' player `resize` callback\n  resize( size, evt ) {}\n\n\n  // Optional: Override this to use Pts' player `action` callback\n  action ( type, px, py, evt ) {}\n\n\n  init() {\n    this.space = new CanvasSpace( this.canvRef ).setup({\n      bgcolor: this.props.background, \n      resize: this.props.resize, \n      retina: this.props.retina\n    });\n\n    this.form = this.space.getForm();\n    this.space.add( this );\n  }\n\n  render() {\n    return (\n      <div className={ this.props.name || \"\" } style={ this.props.style }>\n        <canvas className={ this.props.name ? this.props.name+\"-canvas\" : \"\" } ref={ c => (this.canvRef=c) } style={ this.props.canvasStyle }></canvas>\n      </div>\n    );\n  }\n}\n\n\nPtsCanvas.defaultProps = {\n  name: \"pts-react\", // maps to className of the container div\n  background: \"#9ab\",\n  resize: true,\n  retina: true,\n  play: true,\n  touch: true,\n  style: {},\n  canvasStyle: {}\n}\n"],"names":["PtsCanvas","props","canvRef","React","createRef","space","form","_touch","init","_update","play","playOnce","touch","bindMouse","bindTouch","time","ftime","point","pointer","bound","size","evt","type","px","py","CanvasSpace","setup","background","resize","retina","getForm","add","name","style","c","canvasStyle","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIqBA;;;qBACPC,KAAZ,EAAmB;;;qHACXA,KADW;;UAEZC,OAAL,GAAeC,MAAMC,SAAN,EAAf;UACKC,KAAL,GAAa,IAAb;UACKC,IAAL,GAAY,IAAZ;UACKC,MAAL,GAAc,KAAd;;;;;;wCAGkB;WACbC,IAAL;WACKC,OAAL;;;;yCAGmB;WACdA,OAAL;;;;8BAGQ;UACJ,KAAKR,KAAL,CAAWS,IAAf,EAAqB;aACdL,KAAL,CAAWK,IAAX;OADF,MAEO;aACAL,KAAL,CAAWM,QAAX,CAAoB,CAApB;;;UAGE,KAAKJ,MAAL,KAAgB,KAAKN,KAAL,CAAWW,KAA/B,EAAsC;aAC/BL,MAAL,GAAc,KAAKN,KAAL,CAAWW,KAAzB;aACKP,KAAL,CAAWQ,SAAX,CAAsB,KAAKN,MAA3B,EAAoCO,SAApC,CAA+C,KAAKP,MAApD;;;;;;;;;4BAOKQ,MAAMC,OAAO;WACfV,IAAL,CAAUW,KAAV,CAAiB,KAAKZ,KAAL,CAAWa,OAA5B,EAAqC,EAArC,EAAyC,QAAzC;;;;;;;0BAKKC,OAAOd,OAAQ;;;;;;2BAIde,MAAMC,KAAM;;;;;;2BAIXC,MAAMC,IAAIC,IAAIH,KAAM;;;2BAGtB;WACAhB,KAAL,GAAa,IAAIoB,WAAJ,CAAiB,KAAKvB,OAAtB,EAAgCwB,KAAhC,CAAsC;iBACxC,KAAKzB,KAAL,CAAW0B,UAD6B;gBAEzC,KAAK1B,KAAL,CAAW2B,MAF8B;gBAGzC,KAAK3B,KAAL,CAAW4B;OAHR,CAAb;;WAMKvB,IAAL,GAAY,KAAKD,KAAL,CAAWyB,OAAX,EAAZ;WACKzB,KAAL,CAAW0B,GAAX,CAAgB,IAAhB;;;;6BAGO;;;aAEL;;UAAK,WAAY,KAAK9B,KAAL,CAAW+B,IAAX,IAAmB,EAApC,EAAyC,OAAQ,KAAK/B,KAAL,CAAWgC,KAA5D;wCACU,WAAY,KAAKhC,KAAL,CAAW+B,IAAX,GAAkB,KAAK/B,KAAL,CAAW+B,IAAX,GAAgB,SAAlC,GAA8C,EAAlE,EAAuE,KAAM;mBAAM,OAAK9B,OAAL,GAAagC,CAAnB;WAA7E,EAAqG,OAAQ,KAAKjC,KAAL,CAAWkC,WAAxH;OAFJ;;;;EA/DmChC,MAAMiC;;;AAwE7CpC,UAAUqC,YAAV,GAAyB;QACjB,WADiB;cAEX,MAFW;UAGf,IAHe;UAIf,IAJe;QAKjB,IALiB;SAMhB,IANgB;SAOhB,EAPgB;eAQV;CARf;;;;"}